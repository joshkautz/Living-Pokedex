# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

# Reference:
# "Deploy to Firebase Hosting" GitHub Action: https://github.com/marketplace/actions/deploy-to-firebase-hosting
# "Adding restrictions to API keys" Google Document: https://cloud.google.com/api-keys/docs/add-restrictions-api-keys

name: Deploy to Firebase Hosting Preview Channel

on: pull_request

permissions: write-all

jobs:
  build_and_preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out Repository
        uses: actions/checkout@v3

      - name: Build Project
        run: npm ci && npm run build

      - name: Deploy to Firebase Hosting Preview Channel
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_LIVING_POKEDEX_DE070 }}
          projectId: living-pokedex-de070

      - name: Add Firebase Hosting Preview Channel URL to API Key restrictions
        env:
          API_KEY_SERVICE_ACCOUNT: ${{ secrets.API_KEY_SERVICE_ACCOUNT_LIVING_POKEDEX_DE070 }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_NUMBER: 285902590177
          KEY_ID: 6003ecc6-a4eb-4405-be8c-076dd74b53d1
        run: |
          # Install Firebase Tools
          curl -sL https://firebase.tools | bash

          # Add default referrers.
          allowedReferrers="localhost livingpokedex.com living-pokedex-de070.firebaseapp.com living-pokedex-de070.web.app"
          echo $allowedReferrers

          # Add preview channels.
          validChannels=$(firebase hosting:channel:list --json --token "$FIREBASE_TOKEN" | jq -r '.result.channels[].url')
          validChannels=$(for i in ${validChannels}; do echo "$(basename $i) " ; done;)

          for i in ${validChannels}
          do
            add=true
            for j in ${allowedReferrers}
            do
              if [ "$i" = "$j" ]
              then
                echo "$i already exists in allowedReferrers"
                add=false
                break
              fi
            done
            if [ "$add" = true ]
            then
              echo "Adding $i to allowedReferrers"
              allowedReferrers+=" $i"
            fi
          done

          # Format data for gcurl.
          allowedReferrers=$(for i in ${allowedReferrers}; do echo "\"$i\","; done;)
          allowedReferrers=${allowedReferrers::-1}
          echo $allowedReferrers

          # Install Google's OAuth Tool.
          wget https://storage.googleapis.com/oauth2l/latest/linux_amd64.tgz
          tar -xvzf linux_amd64.tgz

          # Prepare Google Service Account credentials for gcurl.
          echo "$API_KEY_SERVICE_ACCOUNT" >> ~/credentials.json

          # Create gcurl command.
          shopt -s expand_aliases
          alias gcurl='curl -H "$(./linux_amd64/oauth2l header --json ~/credentials.json cloud-platform userinfo.email)" -H "Content-Type: application/json"'

          # Update Google API Key website restrictions.
          gcurl https://apikeys.googleapis.com/v2/projects/${PROJECT_NUMBER}/locations/global/keys/${KEY_ID}?updateMask=restrictions --request PATCH --data '{ "restrictions" : { "browserKeyRestrictions" : { "allowedReferrers" : [ '"$allowedReferrers"' ]}}}'
